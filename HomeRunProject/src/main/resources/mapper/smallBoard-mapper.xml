<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.baseball.small.model.dao.SmallBoardMapper">

	<select id="selectTotalCount" resultType="int">
		SELECT
			   COUNT(*)
		  FROM
		  	   TB_SMALL_BOARD
		 WHERE
		 	   STATUS = 'Y'
		   AND
		   	   ADMIN_STATUS = 'Y'
	</select>
	
	<select id="selectBoardList" resultType="smallBoard">
		SELECT
			   BOARD_NO boardNo,
			   TEAM_NAME teamName,
			   NICKNAME,
			   BOARD_TITLE boardTitle,
			   TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') as createDate,
			   BOARD_CONTENT boardContent,
			   SELECT_COUNT selectCount
		  FROM
		 	   TB_SMALL_BOARD
		  JOIN
		  	   TB_USER ON(BOARD_WRITER = USER_NO)
		 WHERE
		 	   TB_SMALL_BOARD.STATUS = 'Y'
		   AND
		   	   ADMIN_STATUS = 'Y'
		 ORDER
		 	BY
		 	   CREATE_DATE DESC
	</select>

	<select id="getTeamList" resultType="string">
		SELECT
			   TEAM_NAME
		  FROM
		  	   TB_TEAM
		 WHERE
		 	   STATUS = 'Y'
	</select>
	
	<insert id="insertBoard" parameterType="smallBoard">
		INSERT
		  INTO
			   TB_SMALL_BOARD
			   (
			   BOARD_NO,
			   TEAM_NAME,
			   BOARD_WRITER,
			   BOARD_TITLE,
			   CREATE_DATE,
			   BOARD_CONTENT
			   )
	    VALUES
			   (
			   SEQ_SGBNO.NEXTVAL,
			   #{teamName},
			   #{boardWriter},
			   #{boardTitle},
			   DEFAULT,
			   #{boardContent}
			   )
	</insert>
	
	<insert id="insertBoardFile" parameterType="smallBoardUpfile">
		INSERT
		  INTO
			   TB_SMALL_UPFILE
			   (
			   FILE_NO,
			   REF_BNO,
			   ORIGIN_NAME,
			   CHANGE_NAME,
			   UPLOAD_DATE,
			   FILE_PATH
			   )
		VALUES
		  	   (
		  	   SEQ_SGFNO.NEXTVAL,
		  	   SEQ_SGBNO.CURRVAL,
		  	   #{originName},
		  	   #{changeName},
		  	   DEFAULT,
		  	   #{filePath}
		  	   )
	</insert>
	
	<!-- 관리자 기능 -->
	
	<select id="selectAdminListCount" resultType="int">
		SELECT
			   COUNT(*)
		  FROM
		  	   TB_SMALL_BOARD
		 WHERE
		 	   STATUS = 'Y'
		   AND
		   	   ADMIN_STATUS = 'N'
	</select>
	
	<select id="selectAdminList" resultType="smallBoard">
		SELECT
			   BOARD_NO boardNo,
			   TEAM_NAME teamName,
			   NICKNAME,
			   BOARD_TITLE boardTitle,
			   TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') as createDate,
			   BOARD_CONTENT boardContent,
			   SELECT_COUNT selectCount
		  FROM
		 	   TB_SMALL_BOARD
		  JOIN
		  	   TB_USER ON(BOARD_WRITER = USER_NO)
		 WHERE
		 	   TB_SMALL_BOARD.STATUS = 'Y'
		   AND
		   	   ADMIN_STATUS = 'N'
		 ORDER
		 	BY
		 	   CREATE_DATE DESC
	</select>
	
	<select id="adminBoardDetail" parameterType="long" resultType="smallBoard">
		SELECT
			   BOARD_NO boardNo,
			   TEAM_NAME teamName,
			   NICKNAME nickName,
			   BOARD_TITLE boardTitle,
			   TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') as createDate,
			   BOARD_CONTENT boardContent
		  FROM
		  	   TB_SMALL_BOARD
		  JOIN
		  	   TB_USER ON (USER_NO = BOARD_WRITER)
		 WHERE
		 	   BOARD_NO = #{boardNo}
		   AND
		   	   TB_SMALL_BOARD.STATUS = 'Y'
		   AND
		   	   ADMIN_STATUS = 'N'
	</select>
	
	<select id="adminUpfileDetail" parameterType="long" resultType="smallBoardUpfile">
		SELECT
			   FILE_NO fileNo,
			   REF_BNO refBno,
			   ORIGIN_NAME originName,
			   CHANGE_NAME changeName,
			   UPLOAD_DATE uploadDate,
			   FILE_PATH filePath
		  FROM
		  	   TB_SMALL_UPFILE
		 WHERE
		 	   REF_BNO = #{boardNo}
	</select>
	
	<update id="adminPermit" parameterType="long">
		UPDATE
			   TB_SMALL_BOARD
		   SET
		   	   ADMIN_STATUS = 'Y'
		 WHERE
		 	   BOARD_NO = #{boardNo}
	</update>
	
	<!-- 유저 본인 작성 게시글 조회 -->
	<select id="selectMyBoardListCount" parameterType="int" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM
		  	   TB_SMALL_BOARD
		 WHERE
		 	   STATUS = 'Y'
		   AND
		   	   BOARD_WRITER = #{loginUserNo}
	</select>
	
	<select id="selectMyBoardList" parameterType="int" resultType="smallBoard">
		SELECT
			   BOARD_NO boardNo,
			   TEAM_NAME teamName,
			   NICKNAME,
			   BOARD_TITLE boardTitle,
			   TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') as createDate,
			   BOARD_CONTENT boardContent,
			   SELECT_COUNT selectCount,
			   ADMIN_STATUS adminStatus
		  FROM
		 	   TB_SMALL_BOARD
		  JOIN
		  	   TB_USER ON(BOARD_WRITER = USER_NO)
		 WHERE
		 	   TB_SMALL_BOARD.STATUS = 'Y'
		   AND
			   BOARD_WRITER = #{boardWriter}
		 ORDER
		 	BY
		 	   CREATE_DATE DESC
	</select>
	
	<!-- 게시글 조회 -->
	<select id="selectBoardByBoardNo" parameterType="long" resultType="smallBoard">
		SELECT
			   BOARD_NO boardNo,
			   TEAM_NAME teamName,
			   BOARD_TITLE boardTitle,
			   BOARD_WRITER boardWriter,
			   NICKNAME,
			   BOARD_CONTENT boardContent,
			   TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') as createDate,
			   SELECT_COUNT selectCount
		  FROM
		  	   TB_SMALL_BOARD
		  JOIN
		  	   TB_USER ON(BOARD_WRITER = USER_NO)
		 WHERE
		 	   TB_SMALL_BOARD.STATUS = 'Y'
		   AND
		   	   TB_SMALL_BOARD.ADMIN_STATUS = 'Y'
		   AND
		   	   BOARD_NO = #{boardNo}
		 ORDER
		 	BY
		 	   CREATE_DATE DESC
	</select>
	
	<update id="increaseCount" parameterType="long">
		UPDATE
			   TB_SMALL_BOARD
		   SET
		   	   SELECT_COUNT = SELECT_COUNT + 1
		 WHERE
		 	   STATUS = 'Y'
		   AND
		   	   ADMIN_STATUS = 'Y'
		   AND
		   	   BOARD_NO = #{boardNo}
	</update>
	
	<select id="selectUpfileByBoardNo" parameterType="long" resultType="smallBoardUpfile">
		SELECT
			   FILE_NO fileNo,
			   REF_BNO refBno,
			   ORIGIN_NAME originName,
			   CHANGE_NAME changeName,
			   UPLOAD_DATE uploadDate,
			   FILE_PATH filePath
		  FROM
		 	   TB_SMALL_UPFILE
		 WHERE
		 	   REF_BNO = #{refBno}
	</select>
	
	<update id="deleteBoard" parameterType="long">
		UPDATE
			   TB_SMALL_BOARD
		   SET
		   	   STATUS = 'N'
		 WHERE
		 	   BOARD_NO = #{boardNo}
	</update>
	
	<update id="updateBoard" parameterType="smallBoard">
		UPDATE
			   TB_SMALL_BOARD
		   SET
		   	   BOARD_TITLE = #{boardTitle},
		   	   BOARD_CONTENT = #{boardContent}
		 WHERE
		 	   BOARD_NO = #{boardNo}
		   AND
		   	   BOARD_WRITER = #{boardWriter}
		   AND
		   	   STATUS = 'Y'
		   AND
		   	   ADMIN_STATUS = 'Y'
	</update>
	
	<update id="updateBoardUpfile" parameterType="smallBoardUpfile">
		UPDATE
			   TB_SMALL_UPFILE
		   SET
		   	   REF_BNO = #{refBno},
		   	   ORIGIN_NAME = #{originName},
		   	   CHANGE_NAME = #{changeName},
		   	   UPLOAD_DATE = DEFAULT,
		   	   FILE_PATH  = #{filePath}
		 WHERE
		 	   REF_BNO = #{refBno}
	</update>
	
	<!-- 개인게시글 참가자 리스트 관리 -->
	
	<sql id="listColumn">
		SELECT
			   LIST_NO listNo,
			   REF_BNO refBno,
			   PARTICIPANT_NO participantNo,
			   NICKNAME nickName,
			   WRITER_PERMISSION writerPermission,
			   BAN_REASON banReason,
			   USER_ESCAPE userEscape,
			   PARTICIPATION_CONTENT participationContent,
			   PARTICIPATION_STATUS participationStatus,
			   PARTICIPATION_DATE participationDate
		  FROM
		  	   TB_SMALL_LIST
		  JOIN
		  	   TB_USER ON(PARTICIPANT_NO = USER_NO)
		 WHERE
		 	   PARTICIPATION_STATUS = 'Y'
	</sql>
	
	<select id="selectMyParticipantListCount" parameterType="long" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM
		  	   TB_SMALL_LIST
		 WHERE
		 	   REF_BNO = #{boardNo}
		   AND
		   	   PARTICIPATION_STATUS = 'Y'
	</select>
	
	<select id="selectParticipantList" parameterType="long" resultType="smallBoardList">
		<include refid="listColumn"/>
		   AND
		   	   TB_SMALL_LIST.REF_BNO = #{boardNo}
	</select>
	
	<update id="writerAllow" parameterType="int">
		UPDATE
			   TB_SMALL_LIST
		   SET
		   	   WRITER_PERMISSION = 'Y',
		   	   BAN_REASON = 'EMPTY'
		 WHERE
		 	   PARTICIPATION_STATUS = 'Y'
		   AND
		   	   LIST_NO = #{listNo}
		   AND
		   	   WRITER_PERMISSION = 'N'
	</update>
	
	<select id="selectListByListNo" parameterType="int" resultType="smallBoardList">
		<include refid="listColumn"/>
		   AND
		   	   TB_SMALL_LIST.LIST_NO = #{listNo}
		   AND
		   	   WRITER_PERMISSION = 'Y'
	</select>
	
	<update id="updateBanReason" parameterType="smallBoardList">
		UPDATE
			   TB_SMALL_LIST
		   SET
		   	   WRITER_PERMISSION = 'N',
		   	   BAN_REASON = #{banReason}
		 WHERE
		 	   LIST_NO = #{listNo}
	</update>

	<select id="selectPosssibleDetail" parameterType="smallBoard" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       TB_SMALL_LIST
		 WHERE
		       REF_BNO = #{boardNo}
		   AND
		       WRITER_PERMISSION = 'Y'
		   AND
		       PARTICIPANT_NO = #{loginUserNo}
	</select>
	
	<insert id="insertWriterAllow" parameterType="smallBoard">
		INSERT
		  INTO
		  	   TB_SMALL_LIST
		  	   (
		  	   LIST_NO,
		  	   REF_BNO,
		  	   PARTICIPANT_NO,
		  	   WRITER_PERMISSION
		  	   )
	    VALUES
	    	   (
	    	   SEQ_SGLNO.NEXTVAL,
	    	   #{boardNo},
	    	   #{boardWriter},
	    	   'Y'
	    	   )
	</insert>
	
	<select id="validateParticipateForm" parameterType="smallBoardList" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       TB_SMALL_LIST
		 WHERE
		       REF_BNO = #{refBno}
		   AND
		       PARTICIPANT_NO = #{loginUserNo}
	</select>
	
	<insert id="insertSmallBoardList" parameterType="smallBoardList">
		INSERT
		  INTO
		  	   TB_SMALL_LIST
		  	   (
		  	   LIST_NO,
		  	   REF_BNO,
		  	   PARTICIPANT_NO,
		  	   PARTICIPATION_CONTENT
		  	   )
		VALUES
			   (
			   SEQ_SGLNO.NEXTVAL,
			   #{refBno},
			   #{participantNo},
			   #{participationContent}
			   )
	</insert>
	
	<!-- 전체조회 게시글 검색기능 -->
	
	<select id="searchListCount" parameterType="hashmap" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM
		  	   TB_SMALL_BOARD
		  JOIN
		  	   TB_USER ON (BOARD_WRITER = USER_NO)
		 WHERE
		 	   TB_SMALL_BOARD.STATUS = 'Y'
		   AND
		   	   TB_SMALL_BOARD.ADMIN_STATUS = 'Y'
		 <if test="condition == 'writer'">
		   AND
		 	   NICKNAME
		 </if>
		 <if test="condition == 'title'">
		   AND
		   	   BOARD_TITLE
		 </if>
		 <if test="condition == 'content'">
		   AND
		   	   BOARD_CONTENT
		 </if>
		 <if test="condition == 'team'">
		   AND
		   	   TEAM_NAME
		 </if>
		  LIKE '%' || #{keyword} || '%'
	</select>
	
	<select id="searchList" parameterType="hashmap" resultType="smallBoard">
		SELECT
			   BOARD_NO boardNo,
			   TEAM_NAME teamName,
			   BOARD_WRITER boardWriter,
			   NICKNAME,
			   BOARD_TITLE boardTitle,
			   CREATE_DATE createDate,
			   BOARD_CONTENT boardContent,
			   SELECT_COUNT selectCount,
			   TB_SMALL_BOARD.STATUS status,
			   ADMIN_STATUS adminStatus
		  FROM
		 	   TB_SMALL_BOARD
		  JOIN
		  	   TB_USER ON(BOARD_WRITER = USER_NO)
		 WHERE
		 	   TB_SMALL_BOARD.STATUS = 'Y'
		   AND
		   	   TB_SMALL_BOARD.ADMIN_STATUS = 'Y'
		 <choose>
		 	<when test="condition == 'writer'">
		   AND
		   	   NICKNAME
		 	</when>
		 	<when test="condition == 'title'">
		   AND
		   	   BOARD_TITLE
		 	</when>
		 	<when test="condition == 'content'">
		   AND
		   	   BOARD_CONTENT
		 	</when>
		 	<otherwise>
		   AND
		   	   TEAM_NAME
		 	</otherwise>
		 </choose>
		 LIKE '%' || #{keyword} || '%'
		 ORDER
		 	BY
		 	   BOARD_NO DESC
	</select>
	
	<insert id="insertReply" parameterType="smallBoardReply">
		INSERT
		  INTO
		  	   TB_SMALL_REPLY
		  	   (
		  	   REPLY_NO,
		  	   REF_NO,
		  	   REPLY_WRITER,
		  	   CONTENT
		  	   )
		VALUES
		  	   (
		  	   SEQ_SGRNO.NEXTVAL,
		  	   #{refNo},
		  	   #{replyWriter},
		  	   #{content}
		  	   ) 
	</insert>
	
	<select id="selectReply" parameterType="long" resultType="smallBoardReply">
		SELECT
			   REPLY_NO replyNo,
			   REF_NO refNo,
			   REPLY_WRITER replyWriter,
			   CONTENT,
			   TO_CHAR(CREATE_DATE, 'YYYY"-"MM"-"DD" "HH24":"MI') AS createDate,
			   TB_SMALL_REPLY.STATUS,
			   NICKNAME replyNickName
		  FROM
		  	   TB_SMALL_REPLY
		  JOIN
		  	   TB_USER ON (REPLY_WRITER = USER_NO)
		 WHERE
		 	   REF_NO = #{boardNo}
		   AND
		   	   TB_SMALL_REPLY.STATUS = 'Y'
		 ORDER
		 	BY
		 	   REPLY_NO DESC
	</select>
	
	<select id="selectReplyById" parameterType="_int" resultType="smallBoardReply">
		SELECT
			   REPLY_NO replyNo,
			   CONTENT,
			   TO_CHAR(CREATE_DATE, 'YYYY"-"MM"-"DD" "HH24":"MI') AS createDate,
			   NICKNAME replyNickName
		  FROM
		  	   TB_SMALL_REPLY
		  JOIN
		  	   TB_USER ON (REPLY_WRITER = USER_NO)
		 WHERE
		 	   REPLY_NO = #{replyNo}
		   AND
		   	   TB_SMALL_REPLY.STATUS = 'Y'
		 ORDER
		 	BY
		 	   REPLY_NO DESC
	</select>
	
	<update id="deleteChat" parameterType="_int">
		UPDATE
			   TB_SMALL_REPLY
		   SET
		   	   STATUS = 'N'
		 WHERE
		 	   REPLY_NO = #{replyNo}
	</update>
	
</mapper>